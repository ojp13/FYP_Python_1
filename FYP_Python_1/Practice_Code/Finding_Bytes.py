""" Finding the right bytes in IMU Data and corresponding them to physical
measurements"""

import numpy as np

# raw data sampled from an imu

raw_data = ['68', '00', '6c', '00', '82', '00', '77', '00', '00', 'b5', '25', 'dd', 'aa', '55', '25', '06', '68', '00', '93', '00', '08', '00', '66', '06', 'bc', 'e9', 'c0', 'f5', '31', 'fd', '5b', '04', '9e', 'ba', '00', '72', '00', '7b', '00', '72', '00', '64', '00', '69', '00', '7f', '00', '73', '00', '00', 'b6', '25', 'dd', 'aa', '55', '25', '06', '67', '00', '65', '00', 'fa', 'ff', '66', '06', 'bc', 'e9', 'c0', 'f5', '44', 'fc', '7c', '03', '23', 'bc', '00', '71', '00', '7b', '00', '74', '00', '67', '00', '6c', '00', '82', '00', '77', '00', '00', 'b7', '25', 'dd', 'aa', '55', '25', '06', 'ac', '00', '59', '00', 'ed', 'ff', 'ed', '05', 'bb', 'e9', 'ef', 'f4', 'ae', 'f9', '1c', '03', 'eb', 'be', '00', '74', '00', '7d', '00', '74', '00', '67', '00', '6b', '00', '82', '00', '78', '00', '00', 'b8', '25', 'dd', 'aa', '55', '25', '06', 'ac', '00', '59', '00', 'ed', 'ff', 'ed', '05', 'bb', 'e9', 'ef', 'f4', '5d', 'fc', '18', '03', '89', 'be', '00', '72', '00', '7b', '00', '72', '00', '64', '00', '69', '00', '7f', '00', '74', '00', '00', 'b9', '25', 'dd', 'aa', '55', '25', '06', '9e', '00', '5b', '00', 'cd', 'ff', 'ed', '05', 'bb', 'e9', 'ef', 'f4', 'd8', 'fc', '42', '04', 'eb', 'ba', '00', '75', '00', '7e', '00', '75', '00', '67', '00', '6c', '00', '82', '00', '77', '00', '00', 'ba', '25', 'dd', 'aa', '55', '25', '06', '74', '00', '58', '00', 'da', 'ff', 'ed', '05', 'bb', 'e9', 'ef', 'f4', 'd8', 'fc', '42', '04', '72', 'bc', '00', '75', '00', '7d', '00', '73', '00', '64', '00', '69', '00', '7e', '00', '74', '00', '00', 'bb', '25', 'dd', 'aa', '55', '25', '06', '6f', '00', '5d', '00', 'd9', 'ff', 'ed', '05', 'bb', 'e9', 'ef', 'f4', '5f', 'fd', '63', '04', '72', 'bc', '00', '75', '00', '7e', '00', '75', '00', '67', '00', '6c', '00', '82', '00', '77', '00', '00', 'bc', '25', 'dd', 'aa', '55', '25', '06', '6f', '00', '5d', '00', 'd9', 'ff', 'ed', '05', 'bb', 'e9', 'ef', 'f4', '9d', 'fb', 'b3', '03', '26', 'bb', '00', '78', '00', '80', '00', '78', '00', '67', '00', '6b', '00', '81', '00', '78', '00', '00', 'bd', '25', 'dd', 'aa', '55', '25', '06', '80', '00', '73', '00', 'da', 'ff', 'ed', '05', 'bb', 'e9', 'ef', 'f4', '8c', 'fd', '5b', '04', '98', 'bc', '00', '77', '00', '7e', '00', '75', '00', '64', '00', '69', '00', '7e', '00', '74', '00', '00', 'be', '25', 'dd', 'aa', '55', '25', '06', '94', '00', '76', '00', 'd8', 'ff', 'ed', '05', 'bb', 'e9', 'ef', 'f4', '78', 'fc', 'c3', '03', '59', 'bb', '00', '7a', '00', '81', '00', '7b', '00', '67', '00', '6c', '00', '81', '00', '77', '00', '00', 'bf', '25', 'dd', 'aa', '55', '25', '06', '9d', '00', '6c', '00', 'f6', 'ff', 'ed', '05', 'bb', 'e9', 'ef', 'f4', '78', 'fc', '6a', '04', '99', 'bb', '00', '7a', '00', '7f', '00', '77', '00', '64', '00', '69', '00', '7e', '00', '74', '00', '00', 'c0', '25', 'dd', 'aa', '55', '25', '06', '9d', '00', '6c', '00', 'f6', 'ff', 'ed', '05', 'bb', 'e9', 'ef', 'f4', '73', 'fd', '6a', '04', '99', 'bb', '00', '79', '00', '80', '00', '7b', '00', '67', '00', '6c', '00', '81', '00', '77', '00', '00', 'c1', '25', 'dd', 'aa', '55', '25', '06', '81', '00', '60', '00', 'e5', 'ff', '4b', '06', '4e', 'e9', 'b9', 'f5', '90', 'fe', '55', '04', '87', 'b9', '00', '7b', '00', '82', '00', '7d', '00', '67', '00', '6c', '00', '81', '00', '78', '00', '00', 'c2', '25', 'dd', 'aa', '55', '25', '06', '6c', '00', '62', '00', 'f3', 'ff', '4b', '06', '4e', 'e9', 'b9', 'f5', '8f', 'fe', '2e', '05', '99', 'b8', '00', '78', '00', '7f', '00', '78', '00', '64', '00', '69', '00', '7e', '00', '74', '00', '00', 'c3', '25', 'dd', 'aa', '55', '25', '06', '6c', '00', '4b', '00', 'ee', 'ff', '4b', '06', '4e', 'e9', 'b9', 'f5', '19', 'fc', '53', '03', 'd2', 'bb', '00', '7a', '00', '81', '00', '7c', '00', '68', '00', '6c', '00', '81', '00', '77', '00', '00', 'c4', '25', 'dd', 'aa', '55', '25', '06', '6c', '00', '4b', '00', 'ee', 'ff', '4b', '06', '4e', 'e9', 'b9', 'f5', '19', 'fc', 'c6', '02', 'b7', 'be', '00', '77', '00', '7d', '00', '77', '00', '64', '00', '69', '00', '7e', '00', '74', '00', '00', 'c5', 'dd', 'aa', '55', '25', '06', '66', '00', '45', '00', '07', '00', '3f', '06', '48', 'e9', '00', 'f6', '3c', 'fc', '4d', '03', 'ec', 'bd', '00', '73', '00', '7b', '00', '72', '00', '64', '00', '69', '00', '7f', '00', '74', '00', '00', 'cd', '25', 'dd', 'aa', '55', '25', '06', '8a', '00', '3a', '00', '07', '00', '3f', '06', '48', 'e9', '00', 'f6', '48', 'f9', '1c', '03', '57', 'bf', '00', '75', '00', '7e', '00', '75', '00', '67', '00', '6c', '00', '82', '00', '78', '00', '00', 'ce', '25', 'dd', 'aa', '55', '25', '06', 'bc', '00', '52', '00', 'c0', 'ff', '3f', '06', '48', 'e9', '00', 'f6', '38', 'fb', '9b', '02', 'fd', 'bf', '00', '75', '00', '7c', '00', '72', '00', '64', '00', '69', '00', '7f', '00', '74', '00', '00', 'cf', '25', 'dd', 'aa', '55', '25', '06', 'd6', '00', '74', '00', 'b5', 'ff', '3f', '06', '48', 'e9', '00', 'f6', '38', 'fb', '9b', '02', '10', 'bf', '00', '77', '00', '80', '00', '79', '00', '67', '00', '6c', '00', '82', '00', '77', '00', '00', 'd0', '25', 'dd', 'aa', '55', '25', '06', 'd6', '00', '74', '00', 'b9', 'ff', '3f', '06', '48', 'e9', '00', 'f6', '76', 'f9', '24', '03', '10', 'bf', '00', '77', '00', '7f', '00', '76', '00', '66', '00', '6c', '00', '81', '00', '78', '00', '00', 'd1', '25', 'dd', 'aa', '55', '25', '06', 'd5', '00', '7a', '00', 'b9', 'ff', '3f', '06', '48', 'e9', '00', 'f6', '63', 'fc', '6e', '03', '1a', 'be', '00', '77', '00', '7e', '00', '75', '00', '64', '00', '68', '00', '7d', '00', '74', '00', '00', 'd2', '25', 'dd', 'aa', '55', '25', '06', '90', '00', '60', '00', 'c3', 'ff', '3f', '06', '48', 'e9', '00', 'f6', 'ae', 'fb', '92', '03', '8a', 'bc', '00', '7a', '00', '82', '00', '7b', '00', '68', '00', '6c', '00', '81', '00', '78', '00', '00', 'd3', '25', 'dd', 'aa', '55', '25', '06', '6d', '00', '68', '00', 'f0', 'ff', '3f', '06', '48', 'e9', '00', 'f6', 'b5', 'fc', '59', '03', '0f', 'be', '00', '79', '00', '7f', '00', '77', '00', '64', '00', '69', '00', '7e', '00', '74', '00', '00', 'd4', '25', 'dd', 'aa', '55', '25', '06', '6d']
processed_data = np.array([])
start_byte1 = 'dd'
start_byte2 = 'aa'
start_byte3 = '55'
len_sample = 42

i = 0 # Iterator for while loop

while True:
    
    if raw_data[i] == start_byte1:
        if raw_data[i+1] == start_byte2:
            if raw_data[i+2] == start_byte3:
                start_index = i
                break

    i += 1

j = 0
len_data = len(raw_data)

while j < len_data:
    
        
     
